 @IBAction func onClickFilters(_ sender: UIButton) {
        if let infoViewController = storyboard?.instantiateViewController(identifier: "FilterVC") as? FilterVC {
            
            infoViewController.modalPresentationStyle = .overCurrentContext
            infoViewController.modalTransitionStyle = .crossDissolve
            tabBarController?.tabBar.isHidden = true
            // Restore tab bar after dismiss
            infoViewController.onDismiss = { [weak self] in
                self?.tabBarController?.tabBar.isHidden = false
            }
            present(infoViewController, animated: false)
        }
    }





import UIKit

class FilterVC: UIViewController {
   var onDismiss: (() -> Void)? //clousure to set tabbar hidden
    lazy var blurredView: UIView = {
            // 1. create container view
            let containerView = UIView()
            // 2. create custom blur view
            let blurEffect = UIBlurEffect(style: .light)
            let customBlurEffectView = CustomVisualEffectView(effect: blurEffect, intensity: 0.2)
            customBlurEffectView.frame = self.view.bounds
            // 3. create semi-transparent black view
            let dimmedView = UIView()
            dimmedView.backgroundColor = .black.withAlphaComponent(0.6)
            dimmedView.frame = self.view.bounds
            
            // 4. add both as subviews
            containerView.addSubview(customBlurEffectView)
            containerView.addSubview(dimmedView)
            return containerView
        }()
        
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
        // Do any additional setup after loading the view.
    }
    func setupView() {
         // 6. add blur view and send it to back
         view.addSubview(blurredView)
         view.sendSubviewToBack(blurredView)
       
     }
     
    @IBAction func onClickApply(_ sender: UIButton) {
      //  navigationController?.popViewController(animated: false)
        dismiss(animated: false) {
            self.onDismiss?()
        }
    }
    
    @IBAction func onClickClearAll(_ sender: UIButton) {
        
    }
}

RangeUISlider
