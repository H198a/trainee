@IBAction func onClickAddComment(_ sender: UIButton) {
    guard let commentText = txtCommentAdd.text, !commentText.isEmpty else {
        showAlert(message: "Please enter a comment")
        return
    }

    guard let postId = existingPost?["id"] as? Int else {
        showAlert(message: "Post ID not found")
        return
    }

    // Pick a random name and email
    let randomIndex = Int.random(in: 0..<arrNames.count)
    let randomName = arrNames[randomIndex]
    let randomEmail = arrEmails[randomIndex]

    let param: [String: Any] = [
        "name": randomName,
        "body": commentText,
        "email": randomEmail,
        "postId": postId
    ]

    let url = APIUrls.commentUrl

    APIManager.shared.request(url: url, method: .post, parameters: param) { result in
        switch result {
        case .success(let response):
            if let newComment = response as? [String: Any] {
                self.userModel.addComment(newComment, for: postId)
                self.txtCommentAdd.text = ""
                self.tblComment.setContentOffset(CGPoint.zero, animated:false)
                self.tblComment.reloadData()
            }
            print("Comment added successfully")
        case .failure(let error):
            print("Error adding comment:", error)
        }
    }
}
