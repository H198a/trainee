import Foundation
 import UIKit

 struct StoryData{
     let name: String
     let image: UIImage
     let storyImage: [UIImage]
     var isSeen: Bool = false
 }
 
 import UIKit
 //arruser[currentIndex].storyImages.count
 class StoryVC: UIViewController {
     //MARK: Outlet and Variable Declaration
     @IBOutlet weak var cvStory: UICollectionView!
     var arrStoryUsers: [StoryData] = [StoryData(name: "Lily", image: UIImage(named: "img1")!,storyImage:[
         UIImage(named: "img5")!]),
                                       StoryData(name: "Allena", image: UIImage(named: "img2")!,storyImage:[
                                     UIImage(named: "img4")!,
                                     UIImage(named: "img5")!,UIImage(named: "img5")!,UIImage(named: "img5")!]),
                                  StoryData(name: "Stevie", image: UIImage(named: "img3")!,storyImage:[
                                     UIImage(named: "img4")!,
                                     UIImage(named: "img5")!,UIImage(named: "img5")!,UIImage(named: "img5")!]),
                                  StoryData(name: "Riya", image: UIImage(named: "img4")!,storyImage:[
                                     UIImage(named: "img4")!,
                                     UIImage(named: "img5")!,UIImage(named: "img5")!,UIImage(named: "img5")!,UIImage(named: "img5")!,UIImage(named: "img5")!]),
                                  StoryData(name: "Rousy", image: UIImage(named: "img5")!,storyImage:[
                                     UIImage(named: "img4")!,
                                     UIImage(named: "img5")!,UIImage(named: "img5")!,UIImage(named: "img5")!,UIImage(named: "img5")!]),
                                  StoryData(name: "John", image: UIImage(named: "img6")!,storyImage:[
                                     UIImage(named: "img4")!,
                                     UIImage(named: "img5")!,UIImage(named: "img5")!,UIImage(named: "img5")!]),
                                  StoryData(name: "Julien", image: UIImage(named: "img7")!,storyImage:[
                                     UIImage(named: "img4")!,
                                     UIImage(named: "img5")!,UIImage(named: "img5")!]),
                                  StoryData(name: "Amaya", image: UIImage(named: "img8")!,storyImage:[
                                     UIImage(named: "img4")!,
                                     UIImage(named: "img5")!]),
                                  StoryData(name: "Charlie", image: UIImage(named: "img9")!,storyImage:[
                                     UIImage(named: "img4")!,
                                     UIImage(named: "img5")!]),
                                  StoryData(name: "Kelly", image: UIImage(named: "img10")!,storyImage:[
                                     UIImage(named: "img4")!,
                                     UIImage(named: "img5")!])
     ]
     
     override func viewDidLoad() {
         super.viewDidLoad()
         setUP()
     }
     override func viewWillAppear(_ animated: Bool) {
         super.viewWillAppear(animated)
         navigationController?.setNavigationBarHidden(true, animated: true)
     }
     override func viewWillDisappear(_ animated: Bool) {
         super.viewWillDisappear(animated)
         navigationController?.setNavigationBarHidden(true, animated: true)
     }
 }
 //MARK: Setup UI
 extension StoryVC{
     func setUP(){
         let nibName = UINib(nibName: "StoryCell", bundle: nil)
         cvStory.register(nibName, forCellWithReuseIdentifier: "StoryCell")
     }
 }
 //MARK: UICollectionViewDelegate, UICollectionViewDataSource
 extension StoryVC: UICollectionViewDelegate, UICollectionViewDataSource{
     func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
         return arrStoryUsers.count
     }
     
     func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
         let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "StoryCell", for: indexPath) as! StoryCell
         let data = arrStoryUsers[indexPath.item]
         cell.imgStory.image = data.image
         cell.lblName.text = data.name
         cell.configureBorder(isSeen: data.isSeen)
 //
 //        if data.isSeen{
 //            cell.imgStory.borderColor = .lightGray
 //        }else{
 //            cell.imgStory.addBorderGradient(to: cell.imgStory, startColor: UIColor.red, endColor: UIColor.yellow, lineWidth: 6, startPoint: CGPoint.topLeft, endPoint: CGPoint.bottomRight)
 //        }
         return cell
     }
     func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
         arrStoryUsers[indexPath.item].isSeen = true
         collectionView.reloadItems(at: [indexPath])
         
         let storyVC = storyboard?.instantiateViewController(withIdentifier: "StoryViewVC") as! StoryViewVC
         let selectedUser = arrStoryUsers[indexPath.row]
         storyVC.name = selectedUser.name
         storyVC.img = selectedUser.image
         storyVC.arerImgs = selectedUser.storyImage
         storyVC.storyDataa = self.arrStoryUsers
 //        storyVC.allUsers = arrStoryUsers
 //        storyVC.currentUserIndex = indexPath.row
         navigationController?.pushViewController(storyVC, animated: true)
     }
 }
 
 
 
 import UIKit

 class StoryViewVC: UIViewController {
     //MARK: Outlet and Variable Declaration
     @IBOutlet weak var cvStory: UICollectionView!
     @IBOutlet weak var lblName: UILabel!
     @IBOutlet weak var imgUser: UIImageView!
     @IBOutlet weak var paging: UIPageControl!
     
     var currentIndex = 1
     var timer: Timer?
     var storyDataa: [StoryData] = []
     var arerImgs: [UIImage] = []
     var name: String?
     var img: UIImage?
     override func viewDidLoad() {
         super.viewDidLoad()
         setUP()
     }
 }
 //MARK: SetUp UI
 extension StoryViewVC{
     func setUP(){
         let nibName = UINib(nibName: "StoryViewCell", bundle: nil)
         cvStory.register(nibName, forCellWithReuseIdentifier: "StoryViewCell")
         lblName.text = name
         imgUser.image = img
         //timer = Timer.scheduledTimer(timeInterval: 3.0, target: self, selector: #selector(slideToNext), userInfo: nil, repeats: true)
     }
 //    @objc func slideToNext(){
 //        if currentIndex < arerImgs.count - 1
 //        {
 //            currentIndex = currentIndex + 1
 //        } else{
 //            currentIndex = 0
 //        }
 //      //  cvStory.scrollToItem(at: IndexPath(item: currentIndex, section: 0), at: .right, animated: true)
 //    }
 }
 //MARK: UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout
 extension StoryViewVC: UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout{
     func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
         print(storyDataa.count)
         return storyDataa.count
     }
     
     func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
         let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "StoryViewCell", for: indexPath) as! StoryViewCell
 //        cell.cvSubStories.delegate = self
 //        cell.cvSubStories.dataSource = self
         return cell
     }
     func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
         return CGSize(width: cvStory.frame.width, height: cvStory.frame.height)
     }
 }


 import UIKit

 class StoryViewCell: UICollectionViewCell {
 //MARK: Outlet and Variable Declaration
   
     @IBOutlet weak var subImg: UIImageView!
     @IBOutlet weak var lblStory: UILabel!
     @IBOutlet weak var cvSubStories: UICollectionView!
     var arrImgs:[String] = ["img1","img2","img3","img4","img5"]
     override func awakeFromNib() {
         super.awakeFromNib()
         let nibName = UINib(nibName: "SubStoriesCell", bundle: nil)
         cvSubStories.register(nibName, forCellWithReuseIdentifier: "SubStoriesCell")
         cvSubStories.dataSource = self
         cvSubStories.delegate = self
         // Initialization code
     }
 }
 extension StoryViewCell: UICollectionViewDataSource, UICollectionViewDelegate{
  
     func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
         return arrImgs.count
     }
     
     func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
         let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "SubStoriesCell", for: indexPath) as! SubStoriesCell
         cell.imgStory.image = UIImage(named: arrImgs[indexPath.item])
         return cell
     }
     func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
         let height: CGFloat = UIScreen.main.bounds.size.height
         let width: CGFloat = UIScreen.main.bounds.size.width
         return CGSize(width: width, height: height)
     }
 }
 
 
 
 import UIKit

 class SubStoriesCell: UICollectionViewCell {
 //MARK: Outlet and Variable Declaration
     @IBOutlet weak var imgStory: UIImageView!
     override func awakeFromNib() {
         super.awakeFromNib()
         // Initialization code
     }

 }


StoryViewVCâ€™s cellForItemAt
func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
    let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "StoryViewCell", for: indexPath) as! StoryViewCell
    let currentUser = storyDataa[indexPath.item]
    cell.configure(with: currentUser.storyImage)
    return cell
}
StoryViewCell.swift
class StoryViewCell: UICollectionViewCell {
    @IBOutlet weak var subImg: UIImageView!
    @IBOutlet weak var lblStory: UILabel!
    @IBOutlet weak var cvSubStories: UICollectionView!

    var arrImgs: [UIImage] = []

    override func awakeFromNib() {
        super.awakeFromNib()
        let nibName = UINib(nibName: "SubStoriesCell", bundle: nil)
        cvSubStories.register(nibName, forCellWithReuseIdentifier: "SubStoriesCell")
        cvSubStories.delegate = self
        cvSubStories.dataSource = self
    }

    func configure(with images: [UIImage]) {
        self.arrImgs = images
        cvSubStories.reloadData()
    }
}
extension StoryViewCell: UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout {
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return arrImgs.count // Dynamic based on current user
    }

    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "SubStoriesCell", for: indexPath) as! SubStoriesCell
        cell.imgStory.image = arrImgs[indexPath.item]
        return cell
    }

    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: cvSubStories.frame.width, height: cvSubStories.frame.height)
    }
}
